---
import '../styles/globals.css';
import Preloader from '../components/Preloader.astro';
import Footer from '../components/Footer.astro';
import BlobCursorWrapper from '../components/BlobCursorWrapper';
import LiquidEtherBackground from '../components/LiquidEtherBackground';
import BubbleMenuHeader from '../components/BubbleMenuHeader';

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="A personal portfolio website." />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="min-h-screen flex flex-col relative">
    <LiquidEtherBackground
      client:load
      colors={['#5227FF', '#FF9FFC', '#B19EEF']}
      mouseForce={20}
      cursorSize={100}
      isViscous={false}
      viscous={30}
      iterationsViscous={32}
      iterationsPoisson={32}
      resolution={0.5}
      isBounce={false}
      autoDemo={true}
      autoSpeed={0.5}
      autoIntensity={2.2}
      takeoverDuration={0.25}
      autoResumeDelay={3000}
      autoRampDuration={0.6}
      style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', zIndex: -1 }}
    />
    <BlobCursorWrapper client:load />
    <Preloader />
    <div class="relative z-20">
      <BubbleMenuHeader client:load />
    </div>
    <main id="main-content" class="flex-grow container mx-auto px-4 py-8 relative z-10">
      <slot />
    </main>
    <div class="relative z-20">
      <Footer />
    </div>

    <script>
      import { gsap } from "gsap";
      import { ScrollTrigger } from "gsap/ScrollTrigger";

      gsap.registerPlugin(ScrollTrigger);

      const tl = gsap.timeline();

      tl.to(".preloader-char", {
        y: 0,
        stagger: 0.05,
        delay: 0.2,
        duration: 0.5,
      });

      tl.to("#preloader", {
        opacity: 0,
        duration: 0.5,
        delay: 0.5,
        onComplete: () => {
          document.getElementById("preloader")?.remove();
        }
      });

      // Page load animation
      gsap.from("#main-content", { 
        opacity: 0, 
        y: 20, 
        duration: 0.5, 
        delay: tl.duration() - 0.5 
      });

      // Page exit animation
      document.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', e => {
          const href = link.getAttribute('href');
          if (href && href.startsWith('/') && href !== window.location.pathname) {
            e.preventDefault();
            gsap.to('#main-content', {
              opacity: 0,
              y: -20,
              duration: 0.3,
              onComplete: () => {
                window.location.href = href;
              }
            });
          }
        });
      });

      // Section animations on scroll
      const sections = gsap.utils.toArray('#main-content > section');
      sections.forEach(section => {
        gsap.from(section, {
          opacity: 0,
          y: 50,
          duration: 1,
          ease: 'power3.out',
          scrollTrigger: {
            trigger: section,
            start: 'top 85%',
            toggleActions: 'play none none none',
          }
        });
      });
    </script>
  </body>
</html>
